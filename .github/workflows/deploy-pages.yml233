name: Deploy VitePress to GitHub Pages

on:
  push:
    branches:
      - main  # 触发部署的分支，通常是 main 或 master 分支

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest  # 使用 Ubuntu 最新版本的虚拟机来运行 CI/CD 流程

    steps:
      # Step 1: 检出当前仓库代码
      - name: Checkout code
        uses: actions/checkout@v4  # GitHub 提供的官方 action 用于检出代码

      # Step 2: 设置 pnpm 环境
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.2.0  # 指定 pnpm 的版本，根据你的项目需求选择合适的版本

      # Step 3: 设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v4  # 设置 Node.js 环境
        with:
          node-version: '23.7.0'  # 选择要使用的 Node.js 版本
          cache: 'pnpm'  # 启用 pnpm 缓存

      # Step 4: 安装项目依赖
      - name: Install dependencies
        run: pnpm install  # 使用 pnpm 安装项目依赖

      # Step 5: 构建 VitePress 项目
      - name: Build the project
        run: pnpm run build  # 使用 pnpm 构建 VitePress 项目

      # Step 6: 部署到 GitHub Pages
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: main  # 你要部署的分支
          folder: docs/.vitepress/dist  # 构建生成的文件夹路径
          repository-name: username/username.github.io  # 要部署的仓库的名称
          commit-message: "${{ github.event.head_commit.message }} Updated By Github Actions"
          token: ${{ secrets.ACCESS_TOKEN }}  # 使用 GitHub Actions 提供的默认 token, 需要添加 GitHub secrets
          # clean: true  # 清理目标分支的内容
          # force: true  # 强制推送，覆盖目标分支的内容